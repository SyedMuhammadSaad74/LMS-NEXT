{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Syed%20Muhammad%20Saad/Desktop/LMS-NEXT/src/lib/dbConnect.js"],"sourcesContent":["import mongoose from \"mongoose\";\n\nexport async function connectDB() {\n  try {\n    let connection;\n    console.log(\"connection?.connection=>\", connection?.connection);\n    if (connection?.connection?.readyState != 1) {\n      connection = await mongoose.connect(process.env.MONGODB_URI);\n      console.log(\"DB Connected\");\n    }\n  } catch (err) {\n    console.log(\"err=>\", err);\n  }\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe;IACpB,IAAI;QACF,IAAI;QACJ,QAAQ,GAAG,CAAC,4BAA4B,YAAY;QACpD,IAAI,YAAY,YAAY,cAAc,GAAG;YAC3C,aAAa,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,WAAW;YAC3D,QAAQ,GAAG,CAAC;QACd;IACF,EAAE,OAAO,KAAK;QACZ,QAAQ,GAAG,CAAC,SAAS;IACvB;AACF"}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Syed%20Muhammad%20Saad/Desktop/LMS-NEXT/src/lib/modals/UserModal.js"],"sourcesContent":["import mongoose from \"mongoose\";\n\nconst { Schema } = mongoose;\n\nconst userSchema = new Schema(\n    {\n    fullname: String,\n    email: {type: String, required: true},\n    provider: {type: String},\n    profileImg:{type: String},\n    password:{type: String},\n    role:{type: String, default: \"user\"},\n    gender: String,\n    address: String,\n},\n{timestamps : true}\n);\n\n export  const UserModal =\n  mongoose?.models?.Users || mongoose.model(\"Users\",userSchema);"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,EAAE,MAAM,EAAE,GAAG,yGAAA,CAAA,UAAQ;AAE3B,MAAM,aAAa,IAAI,OACnB;IACA,UAAU;IACV,OAAO;QAAC,MAAM;QAAQ,UAAU;IAAI;IACpC,UAAU;QAAC,MAAM;IAAM;IACvB,YAAW;QAAC,MAAM;IAAM;IACxB,UAAS;QAAC,MAAM;IAAM;IACtB,MAAK;QAAC,MAAM;QAAQ,SAAS;IAAM;IACnC,QAAQ;IACR,SAAS;AACb,GACA;IAAC,YAAa;AAAI;AAGT,MAAM,YACb,yGAAA,CAAA,UAAQ,EAAE,QAAQ,SAAS,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,SAAQ"}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Syed%20Muhammad%20Saad/Desktop/LMS-NEXT/src/app/api/user/route.js"],"sourcesContent":["import { connectDB } from \"@/lib/dbConnect\";\nimport { UserModal } from \"@/lib/modals/UserModal\";\nimport bcrypt from \"bcrypt\";\nimport jwt from \"jsonwebtoken\";\n\nexport async function POST(request) {\n    await connectDB();\n    const obj = await request.json();\n\n    const user = await UserModal.findOne({ email: obj.email });\n    if (user)\n        return Response.json(\n            { error: true, msg: \"User Already Exist\" },\n            { status: 403 }\n        );\n\n    const saltRounds = 10;\n    const hashedPassword = await bcrypt.hash(obj.password, saltRounds);\n    obj.password = hashedPassword;\n\n    let newUser = new UserModal ({ ...obj });\n    newUser = await newUser.save();\n\n    const token = jwt.sign(\n        { id: newUser._id, role: newUser.role },\n        process.env.JWT_KEY\n    );\n\n    return Response.json({\n        error: false,\n        msg: \"User Added Successfully\",\n        user: newUser,\n        token,\n    });\n}\n\nexport async function GET() {\n    return Response.json(\"User Get Request\");\n\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;AAEO,eAAe,KAAK,OAAO;IAC9B,MAAM,CAAA,GAAA,yHAAA,CAAA,YAAS,AAAD;IACd,MAAM,MAAM,MAAM,QAAQ,IAAI;IAE9B,MAAM,OAAO,MAAM,mIAAA,CAAA,YAAS,CAAC,OAAO,CAAC;QAAE,OAAO,IAAI,KAAK;IAAC;IACxD,IAAI,MACA,OAAO,SAAS,IAAI,CAChB;QAAE,OAAO;QAAM,KAAK;IAAqB,GACzC;QAAE,QAAQ;IAAI;IAGtB,MAAM,aAAa;IACnB,MAAM,iBAAiB,MAAM,qGAAA,CAAA,UAAM,CAAC,IAAI,CAAC,IAAI,QAAQ,EAAE;IACvD,IAAI,QAAQ,GAAG;IAEf,IAAI,UAAU,IAAI,mIAAA,CAAA,YAAS,CAAE;QAAE,GAAG,GAAG;IAAC;IACtC,UAAU,MAAM,QAAQ,IAAI;IAE5B,MAAM,QAAQ,uIAAA,CAAA,UAAG,CAAC,IAAI,CAClB;QAAE,IAAI,QAAQ,GAAG;QAAE,MAAM,QAAQ,IAAI;IAAC,GACtC,QAAQ,GAAG,CAAC,OAAO;IAGvB,OAAO,SAAS,IAAI,CAAC;QACjB,OAAO;QACP,KAAK;QACL,MAAM;QACN;IACJ;AACJ;AAEO,eAAe;IAClB,OAAO,SAAS,IAAI,CAAC;AAEzB"}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}