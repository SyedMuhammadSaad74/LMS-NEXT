{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/lib/dbConnect.js"],"sourcesContent":["import mongoose from \"mongoose\";\n\nexport async function connectDB() {\n  try {\n    let connection;\n    console.log(\"connection?.connection=>\", connection?.connection);\n    if (connection?.connection?.readyState != 1) {\n      connection = await mongoose.connect(process.env.MONGODB_URI);\n      console.log(\"DB Connected\");\n    }\n  } catch (err) {\n    console.log(\"err=>\", err);\n  }\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe;IACpB,IAAI;QACF,IAAI;QACJ,QAAQ,GAAG,CAAC,4BAA4B,YAAY;QACpD,IAAI,YAAY,YAAY,cAAc,GAAG;YAC3C,aAAa,MAAM,kJAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,WAAW;YAC3D,QAAQ,GAAG,CAAC;QACd;IACF,EAAE,OAAO,KAAK;QACZ,QAAQ,GAAG,CAAC,SAAS;IACvB;AACF"}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/lib/modals/UserModal.js"],"sourcesContent":["import mongoose from \"mongoose\";\n\nconst { Schema } = mongoose;\n\nconst userSchema = new Schema(\n    {\n    fullname: String,\n    email: {type: String, required: true},\n    provider: {type: String},\n    profileImg:{type: String},\n    password:{type: String},\n    role:{type: String, default: \"user\"},\n    gender: String,\n    address: String,\n},\n{timestamps : true}\n);\n\n export  const UserModal =\n  mongoose?.models?.Users || mongoose.model(\"Users\",userSchema);"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,EAAE,MAAM,EAAE,GAAG,kJAAA,CAAA,UAAQ;AAE3B,MAAM,aAAa,IAAI,OACnB;IACA,UAAU;IACV,OAAO;QAAC,MAAM;QAAQ,UAAU;IAAI;IACpC,UAAU;QAAC,MAAM;IAAM;IACvB,YAAW;QAAC,MAAM;IAAM;IACxB,UAAS;QAAC,MAAM;IAAM;IACtB,MAAK;QAAC,MAAM;QAAQ,SAAS;IAAM;IACnC,QAAQ;IACR,SAAS;AACb,GACA;IAAC,YAAa;AAAI;AAGT,MAAM,YACb,kJAAA,CAAA,UAAQ,EAAE,QAAQ,SAAS,kJAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,SAAQ"}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/auth.js"],"sourcesContent":["import { connectDB } from \"@/lib/dbConnect\";\nimport { UserModal } from \"@/lib/modals/UserModal\";\nimport NextAuth from \"next-auth\";\nimport Google from \"next-auth/providers/google\";\nimport Credentials from \"next-auth/providers/credentials\";\n\nconst handleLoginUser = async (profile) => {\n  await connectDB();\n  const user = await UserModal.findOne({ email: profile.email });\n  if (user) {\n    return user;\n  } else {\n    const obj = {\n      fullname: profile.name,\n      email: profile.email,\n      provider: \"google\",\n      profileImg: profile.picture,\n    };\n    let newUser = await new UserModal(obj);\n    newUser = await newUser.save();\n    return newUser;\n  }\n};\n\nexport const { handlers, signIn, signOut, auth } = NextAuth({\n  providers: [\n    Google,\n    Credentials({\n      credentials: {\n        email: {},\n        password: {},\n      },\n      authorize: async (credentials) => {\n        let user = null;\n        console.log(\"credentials=>\", credentials);\n\n        let res = await fetch(\n          ` https://lms-next-mocha.vercel.app/api/user/login`,\n          {\n            method: \"POST\",\n            body: JSON.stringify({\n              email: credentials.email,\n              password: credentials.password,\n            }),\n          }\n        );\n        res = await res.json();\n        user = res.user;\n        return user;\n      },\n    }),\n  ],\n  callbacks: {\n    async signIn({ account, profile }) {\n      console.log(\"account=>\", account);\n      if (account.provider == \"google\") {\n        console.log(\"profile=>\", profile);\n        const user = await handleLoginUser(profile);\n\n        return { ...profile, role: user.role }; // Do different verification for other providers that don't have `email_verified`\n      }\n      return true;\n    },\n    async jwt({ token }) {\n      console.log(\"token=>\", token);\n      const user = await handleLoginUser(token);\n      console.log(\"user in the JWT=>\", user);\n      token.role = user.role;\n      token._id = user._id;\n      token.picture = user?.profileImg;\n      token.fullname = user?.fullname;\n      return token;\n    },\n    session({ session, token }) {\n      session.user._id = token._id;\n      session.user.role = token.role;\n      session.user.image = token.picture;\n      session.user.name = token.fullname;\n      return session;\n    },\n  },\n});\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AAFA;AACA;AACA;;;;;;AAEA,MAAM,kBAAkB,OAAO;IAC7B,MAAM,CAAA,GAAA,uHAAA,CAAA,YAAS,AAAD;IACd,MAAM,OAAO,MAAM,iIAAA,CAAA,YAAS,CAAC,OAAO,CAAC;QAAE,OAAO,QAAQ,KAAK;IAAC;IAC5D,IAAI,MAAM;QACR,OAAO;IACT,OAAO;QACL,MAAM,MAAM;YACV,UAAU,QAAQ,IAAI;YACtB,OAAO,QAAQ,KAAK;YACpB,UAAU;YACV,YAAY,QAAQ,OAAO;QAC7B;QACA,IAAI,UAAU,MAAM,IAAI,iIAAA,CAAA,YAAS,CAAC;QAClC,UAAU,MAAM,QAAQ,IAAI;QAC5B,OAAO;IACT;AACF;AAEO,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,qJAAA,CAAA,UAAQ,AAAD,EAAE;IAC1D,WAAW;QACT,qJAAA,CAAA,UAAM;QACN,CAAA,GAAA,0JAAA,CAAA,UAAW,AAAD,EAAE;YACV,aAAa;gBACX,OAAO,CAAC;gBACR,UAAU,CAAC;YACb;YACA,WAAW,OAAO;gBAChB,IAAI,OAAO;gBACX,QAAQ,GAAG,CAAC,iBAAiB;gBAE7B,IAAI,MAAM,MAAM,MACd,CAAC,iDAAiD,CAAC,EACnD;oBACE,QAAQ;oBACR,MAAM,KAAK,SAAS,CAAC;wBACnB,OAAO,YAAY,KAAK;wBACxB,UAAU,YAAY,QAAQ;oBAChC;gBACF;gBAEF,MAAM,MAAM,IAAI,IAAI;gBACpB,OAAO,IAAI,IAAI;gBACf,OAAO;YACT;QACF;KACD;IACD,WAAW;QACT,MAAM,QAAO,EAAE,OAAO,EAAE,OAAO,EAAE;YAC/B,QAAQ,GAAG,CAAC,aAAa;YACzB,IAAI,QAAQ,QAAQ,IAAI,UAAU;gBAChC,QAAQ,GAAG,CAAC,aAAa;gBACzB,MAAM,OAAO,MAAM,gBAAgB;gBAEnC,OAAO;oBAAE,GAAG,OAAO;oBAAE,MAAM,KAAK,IAAI;gBAAC,GAAG,iFAAiF;YAC3H;YACA,OAAO;QACT;QACA,MAAM,KAAI,EAAE,KAAK,EAAE;YACjB,QAAQ,GAAG,CAAC,WAAW;YACvB,MAAM,OAAO,MAAM,gBAAgB;YACnC,QAAQ,GAAG,CAAC,qBAAqB;YACjC,MAAM,IAAI,GAAG,KAAK,IAAI;YACtB,MAAM,GAAG,GAAG,KAAK,GAAG;YACpB,MAAM,OAAO,GAAG,MAAM;YACtB,MAAM,QAAQ,GAAG,MAAM;YACvB,OAAO;QACT;QACA,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YACxB,QAAQ,IAAI,CAAC,GAAG,GAAG,MAAM,GAAG;YAC5B,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,IAAI;YAC9B,QAAQ,IAAI,CAAC,KAAK,GAAG,MAAM,OAAO;YAClC,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,QAAQ;YAClC,OAAO;QACT;IACF;AACF"}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}